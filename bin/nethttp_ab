#!/usr/bin/env ruby
require 'rubygems'
require File.dirname(File.expand_path(__FILE__)) + '/../lib/requester.rb'

# SIMPLE USAGE:
# 3 concurrent threads and 100 total requests
# nethttp_ab -n100 -c3 http://www.yoursite.com
#
# OR simulate one user and follow all local links on the page
# nethttp_ab -f http://localhost:3000
#
# simulate 3 users (all local links on the page will be visited once)
# nethttp_ab --follow_links -c3 http://localhost:3000

opts = {}

opts[:follow_links] = ARGV.include?('--follow_links') || ARGV.include?('-f')

opts[:concurrent_threads] = ARGV.join.match(/-c\s*(\d*)/) ? $1.to_i : 1

opts[:follow_links_depth] = ARGV.join.match(/-f\s*(\d*)/) ? $1.to_i : 1

opts[:requests] = ARGV.join.match(/-n\s*(\d*)/) ? $1.to_i : 10

url_to_benchmark = "http://localhost:3000/"

# search in ARGV for the url to perform benchmarking on
ARGV.each do |arg|
  url_to_benchmark = arg if arg =~ NethttpAb::Requester::URL_REGEXP
end

url_to_benchmark = "http://" + url_to_benchmark if url_to_benchmark !~ /^https?:\/\//

requester = NethttpAb::Requester.new
requester.concurrent_users  = opts[:concurrent_threads]
requester.num_of_requests   = opts[:requests]
requester.follow_links      = opts[:follow_links]
requester.follow_links_depth= opts[:follow_links_depth]
requester.url               = url_to_benchmark

requester.proceed
requester.print_stats
