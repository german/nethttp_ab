#!/usr/bin/env ruby
require 'rubygems'
require File.dirname(File.expand_path(__FILE__)) + '/../lib/requester.rb'

# SIMPLE USAGE:
# 3 concurrent threads and 100 total requests
# nethttp_ab -n 100 -c 3 http://www.yoursite.com
#
# OR simulate user and follow all local links on the page
# nethttp_ab -f http://localhost:3000

opts = {}

if ARGV.include?('--follow_links') || ARGV.include?('-f')
  opts[:follow_links] = true
else
  opts[:follow_links] = false
end

if ARGV.include?('-c')
  opts[:concurrent_threads] = ARGV[ARGV.index('-c') + 1].to_i
  ARGV.delete('-c')
  ARGV.delete(opts[:concurrent_threads])
else
  opts[:concurrent_threads] = 3
end

if ARGV.include?('-n')
  opts[:requests] = ARGV[ARGV.index('-n') + 1].to_i
  ARGV.delete('-n')
  ARGV.delete(opts[:requests])
else
  opts[:requests] = 10
end

url_to_benchmark = "http://localhost:3000/"

# search for the url to perform benchmarking on
ARGV.each do |arg|
  url_to_benchmark = arg if arg =~ /^(https?:\/\/)?([\w\.]+)\.([a-z]{2,6}\.?)(\/[\w\.]*)*\/?$/
end

url_to_benchmark = "http://" + url_to_benchmark if url_to_benchmark !~ /^https?:\/\//

requester = NethttpAb::Requester.new
requester.concurrent_users  = opts[:concurrent_threads]
requester.num_of_requests   = opts[:requests]
requester.follow_links      = opts[:follow_links]
requester.url               = url_to_benchmark

requester.proceed
requester.print_stats
